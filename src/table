CREATE SCHEMA employee_management;

USE employee_management;


CREATE TABLE department (
    deptID VARCHAR(3) PRIMARY KEY,
    deptName VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE branch (
	branchID INT AUTO_INCREMENT PRIMARY KEY,
    location VARCHAR(30) UNIQUE NOT NULL,
    classification VARCHAR(20) CHECK (classification IN ('globalHQ', 'regionalHQ', 'sideOffice')) NOT NULL
);

CREATE TABLE employee (
    employeeID INT AUTO_INCREMENT PRIMARY KEY,
    position VARCHAR(30) NOT NULL,
    fName VARCHAR(50) NOT NULL,
    lName VARCHAR(50) NOT NULL,
    gender VARCHAR(8) NOT NULL,
    hiringDate DATE NOT NULL,
    email VARCHAR(320) NOT NULL UNIQUE,
    salary INT NULL,	/*Incase employee is fired. No need to set an additional attribute just query if salary is null*/
    DOB DATE NOT NULL,
    deptID VARCHAR(3) NULL,
    branchID INT NULL,
    FOREIGN KEY (deptID)
        REFERENCES department (deptID)
        ON DELETE SET NULL,
    FOREIGN KEY (branchID)
        REFERENCES branch (branchID)
        ON DELETE SET NULL
);

CREATE TABLE phoneNumbers (
    pNumber VARCHAR(20) PRIMARY KEY,
    employeeID INT NOT NULL,
    FOREIGN KEY (employeeID)
        REFERENCES employee (employeeID)
        ON DELETE CASCADE
);

CREATE TABLE users (
    userID INT AUTO_INCREMENT PRIMARY KEY,
    userName VARCHAR(50) UNIQUE NOT NULL,
    hash VARCHAR(120) NOT NULL,
    salt VARCHAR(60) NOT NULL,
    employeeID INT UNIQUE NOT NULL,
    FOREIGN KEY (employeeID)
        REFERENCES employee (employeeID)
        ON DELETE CASCADE
);

CREATE TABLE project (
	projectID VARCHAR(5) PRIMARY KEY,
    projectName VARCHAR(50) UNIQUE NOT NULL,
    pstatus VARCHAR(30) NOT NULL,
    budget INT NOT NULL,
    startDate DATE NOT NULL,
    endDate DATE NULL	/*If project is still being worked on*/
);

CREATE TABLE task (
    taskID VARCHAR(32) PRIMARY KEY,	/*Combine project and employee id for task id*/
    taskName VARCHAR(50) UNIQUE NOT NULL,
    deadline DATE NOT NULL,
    assignedOn DATETIME NOT NULL,
    projectID VARCHAR(5) NOT NULL,
    FOREIGN KEY (projectID)
        REFERENCES project (projectID)
        ON DELETE CASCADE
);

CREATE TABLE worksOn (
    taskID VARCHAR(8),
    employeeID INT NOT NULL,
    PRIMARY KEY (taskID , employeeID),
    FOREIGN KEY (taskID)
        REFERENCES task (taskID)
        ON DELETE CASCADE,
    FOREIGN KEY (employeeID)
        REFERENCES employee (employeeID)
        ON DELETE CASCADE
);

CREATE TABLE attendance (
    employeeID INT NOT NULL,
    date DATE NOT NULL,
    intime TIME NULL,
    outtime TIME NULL,
    PRIMARY KEY (employeeID , date),
    FOREIGN KEY (employeeID)
        REFERENCES employee (employeeID)
        ON DELETE CASCADE
);

CREATE TABLE leaves (
	leaveID VARCHAR(32) PRIMARY KEY, /*Combine employee ID and date*/
    employeeID INT NOT NULL,
    startDate DATE NOT NULL,
    endDate DATE NOT NULL,
    status VARCHAR(8) DEFAULT 'Pending' CHECK (status IN ('Pending', 'Approved', 'Denied')) NOT NULL,
    FOREIGN KEY (employeeID) 	
		REFERENCES employee (employeeID) 
        ON DELETE CASCADE
);

CREATE TABLE salary (
    paymentID INT AUTO_INCREMENT PRIMARY KEY,
    amount INT NOT NULL,
    date DATE NOT NULL,
    employeeID INT NOT NULL,
    FOREIGN KEY (employeeID)
        REFERENCES employee (employeeID)
        ON DELETE CASCADE
)